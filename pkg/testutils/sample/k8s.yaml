apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample
  labels:
    app: sample
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sample
  template:
    metadata:
      labels:
        app: sample
      annotations:
        adx-mon/scrape: "true"
        adx-mon/log-destination: "Logs:Sample"
        adx-mon/log-parsers: "json"
        adx-mon/port: "8080"
        adx-mon/path: "/metrics"
    spec:
      containers:
      - name: sample
        image: sample:latest
        imagePullPolicy: Never
        ports:
          - containerPort: 8080
            name: metrics
---
apiVersion: v1
kind: Service
metadata:
  name: sample
  namespace: default
spec:
  selector:
    app: sample
  ports:
    - protocol: TCP
      port: 8080
---
apiVersion: adx-mon.azure.com/v1
kind: Function
metadata:
  name: sample
spec:
  body: |
    .create-or-alter function with (view=true, folder='views') Sample () {
      table('Sample')
      | extend msg = tostring(Body.msg),
              encoding = tostring(Body['handler']['encoding']),
              number = toint(Body['handler']['number']),
              ['time'] = todatetime(Body['time']),
              level = tostring(Body.level),
              host = tostring(Resource.host),
              namespace = tostring(Resource.namespace),
              container = tostring(Resource.container)
      | project-away Timestamp, ObservedTimestamp, TraceId, SpanId, SeverityText, SeverityNumber, Body, Resource, Attributes
    }
  database: Logs