---
apiVersion: v1
kind: Namespace
metadata:
  name: adx-mon
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ingestor
  namespace: adx-mon
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: adx-mon:ingestor
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - adx-mon.azure.com
    resources:
      - functions
    verbs:
      - get
      - list
  - apiGroups:
      - adx-mon.azure.com
    resources:
      - functions/status
    verbs:
      - update
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: adx-mon:ingestor
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: adx-mon:ingestor
subjects:
  - kind: ServiceAccount
    name: ingestor
    namespace: adx-mon
---
apiVersion: v1
kind: Service
metadata:
  name: ingestor
  namespace: adx-mon
spec:
  type: ClusterIP
  selector:
    app: ingestor
  ports:
    # By default and for convenience, the `targetPort` is set to the same value as the `port` field.
    - port: 443
      targetPort: 9090
      # Optional field
      # By default and for convenience, the Kubernetes control plane will allocate a port from a range (default: 30000-32767)
      #nodePort: 30007
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: functions.adx-mon.azure.com
spec:
  group: adx-mon.azure.com
  names:
    kind: Function
    listKind: FunctionList
    plural: functions
    singular: function
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Function defines a KQL function to be maintained in the Kusto
          cluster
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: FunctionSpec defines the desired state of Function
            properties:
              body:
                description: Body is the KQL body of the function
                type: string
              database:
                description: Database is the name of the database in which the function
                  will be created
                type: string
            required:
            - body
            - database
            type: object
          status:
            description: FunctionStatus defines the observed state of Function
            properties:
              error:
                description: Error is a string that communicates any error message
                  if one exists
                type: string
              lastTimeReconciled:
                description: LastTimeReconciled is the last time the Function was
                  reconciled
                format: date-time
                type: string
              message:
                description: Message is a human-readable message indicating details
                  about the Function
                type: string
              status:
                description: Status is an enum that represents the status of the Function
                type: string
            required:
            - lastTimeReconciled
            - status
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: adx-mon.azure.com/v1
kind: Function
metadata:
  name: ingestor
spec:
  body: |
    .create-or-alter function with (view=true, folder='views') Ingestor () {
      table('Ingestor')
      | extend msg = tostring(Body.msg),
               lvl = tostring(Body.lvl),
               ts = todatetime(Body.ts),
               namespace = tostring(Resource.namespace),
               container = tostring(Resource.container),
               pod = tostring(Resource.pod),
               host = tostring(Resource.host)
      | project-away Timestamp, ObservedTimestamp, TraceId, SpanId, SeverityText, SeverityNumber, Body, Resource, Attributes
    }
  database: Logs