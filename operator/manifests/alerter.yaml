---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Namespace }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: alerter
  namespace: {{ .Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Namespace }}:alerter
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - adx-mon.azure.com
    resources:
      - alertrules
    verbs:
      - get
      - list
      - update
      - patch
  - apiGroups:
      - adx-mon.azure.com
    resources:
      - alertrules/status
    verbs:
      - update
      - patch
  - apiGroups:
      - adx-mon.azure.com
    resources:
      - alertrules/finalizers
    verbs:
      - get
      - update
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Namespace }}:alerter
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ .Namespace }}:alerter
subjects:
  - kind: ServiceAccount
    name: alerter
    namespace: {{ .Namespace }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alerter
  namespace: {{ .Namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: alerter
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        adx-mon/log-destination: Logs:Alerter
        adx-mon/log-parsers: json
        adx-mon/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        app: alerter
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 65534
      containers:
      - args:
        - --alerter-address={{ .AlerterEndpoint }}
        - --port=8080
        {{- range .KustoEndpoints }}
        - --kusto-endpoint={{ . }}
        {{- end }}
        command:
        - /usr/local/bin/alerter
        env:
        - name: GODEBUG
          value: http2client=0
        image: {{ .Image }}
        imagePullPolicy: Always
        name: alerter
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          limits:
            cpu: 400m
            memory: 1400Mi
          requests:
            cpu: 100m
            memory: 125Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /etc/pki/ca-trust/extracted
          name: etc-pki-ca-certs
          readOnly: true
        - mountPath: /etc/ssl/certs
          name: ca-certs
          readOnly: true
      restartPolicy: Always
      serviceAccount: alerter
      serviceAccountName: alerter
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: agentpool
        operator: Equal
        value: infra
      - effect: NoSchedule
        key: infra-nodepool
        operator: Exists
      volumes:
      - name: tmp
        emptyDir: {}
      - hostPath:
          path: /etc/ssl/certs
          type: Directory
        name: ca-certs
      - hostPath:
          path: /etc/pki/ca-trust/extracted
          type: DirectoryOrCreate
        name: etc-pki-ca-certs