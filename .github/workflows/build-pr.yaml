# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types: [opened, review_requested, synchronize, reopened]

jobs:

  build:
    permissions: read-all
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.22

    - name: Update apt
      run: sudo apt update

    - name: Install dependencies
      run: sudo apt install -y libsystemd-dev # for collector journal input

    - name: Check gofmt
      run: |
        unformatted=$(find . -type d -name vendor -prune -o -type f -name '*.go' -print0 | xargs -0 gofmt -l)
        if [ -n "$unformatted" ]; then
          echo "The following files are not gofmt'd:"
          echo "$unformatted"
          exit 1
        fi

    - name: Build
      run: go build -mod=vendor -v ./...

    - name: Test
      run: ENABLE_ASSERTIONS=true go test -race -mod=vendor -v -timeout=30m ./...

    - name: Ensure docs are updated
      run: |
        make gendocs
        if ! git diff --exit-code -- docs/config.md; then
          echo "docs/config.md is not up to date. Please run 'make gendocs' and commit the changes." >&2
          exit 1
        fi

    - name: Ensure k8s bundle is updated
      run: |
        make k8s-bundle
        if ! git diff --exit-code -- build/k8s/bundle.sh; then
          echo "build/k8s/bundle.sh is not up to date. Please run 'make k8s-bundle' and commit the changes." >&2
          exit 1
        fi
