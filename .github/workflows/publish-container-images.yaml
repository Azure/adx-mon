name: Publish container images

on:
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request: # TODO: Remove after testing
    branches: [ "main" ]
env:
  REGISTRY: ghcr.io

jobs:
  build-and-push:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        include:
          # github.repository as <account>/<repo>
          - dockerfile: build/images/Dockerfile.alerter
            image: ghcr.io/${{ github.repository }}/alerter
          - dockerfile: build/images/Dockerfile.collector
            image: ghcr.io/${{ github.repository }}/collector
          - dockerfile: build/images/Dockerfile.ingestor
            image: ghcr.io/${{ github.repository }}/ingestor

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up BuildKit Docker container builder to be able to build images
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image }}
          # Use latest tag on default branch (main), otherwise use the tag
          #            type=raw, value=latest, enable={{is_default_branch}}
          tags: |
            type=raw, value=latest, enable=true
            type=ref, event=tag
          flavor: |
            latest=false

      # Build and push Docker image with Buildx
      - name: Build and push image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
