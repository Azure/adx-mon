---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.19.0
  name: summaryrules.adx-mon.azure.com
spec:
  group: adx-mon.azure.com
  names:
    kind: SummaryRule
    listKind: SummaryRuleList
    plural: summaryrules
    singular: summaryrule
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: SummaryRule is the Schema for the summaryrules API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: SummaryRuleSpec defines the desired state of SummaryRule
            properties:
              body:
                description: Body is the KQL body of the function
                type: string
              criteria:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: |-
                  Key/Value pairs used to determine when a summary rule can execute. If empty, always execute. Keys and values
                  are deployment specific and configured on ingestor instances. For example, an ingestor instance may be
                  started with `--cluster-labels=region=eastus`. If a SummaryRule has `criteria: {region: [eastus]}`, then the rule will only
                  execute on that ingestor. Any key/values pairs must match (case-insensitive) for the rule to execute.
                type: object
              criteriaExpression:
                description: |-
                  CriteriaExpression is an optional CEL (Common Expression Language) expression that provides a richer way
                  to determine if the summary rule should execute. The CEL environment is dynamically constructed from the
                  ingestor's cluster labels (e.g. region, cloud, and any --cluster-labels key/value pairs). All variables are
                  exposed as strings and can be referenced directly by their label name. For example:

                    criteriaExpression: "region in ['eastus','westus'] && environment == 'prod'"

                  Execution semantics:
                    * If neither criteria nor criteriaExpression are specified, the rule always executes.
                    * If only criteriaExpression is specified, it must evaluate to true for the rule to execute.
                    * If only criteria (map) is specified, existing matching behavior (any key/value match) applies.
                    * If both are specified, the rule executes when BOTH the criteria map matches AND the expression evaluates to true.

                  An invalid expression (parse or type check error) will be treated as an error and prevent the rule from executing.
                type: string
              database:
                description: Database is the name of the database in which the function
                  will be created
                type: string
              ingestionDelay:
                description: |-
                  IngestionDelay is subtracted from the execution window start and end times to account
                  for data ingestion latency, ensuring the query only processes fully ingested data.
                  NOTE: Current implementation also subtracts this delay from the "now" used to decide
                  whether an interval has elapsed (i.e. scheduling readiness). This effectively lengthens
                  wall‑clock spacing between executions to Interval + IngestionDelay. If you intend only
                  to shift the processed window but keep wall‑clock cadence at Interval, this behavior
                  will be adjusted in a future release.
                type: string
                x-kubernetes-validations:
                - message: ingestionDelay must be a valid duration
                  rule: self == '' || duration(self) >= duration('0s')
              interval:
                description: Interval is the cadence at which the rule will be executed
                type: string
                x-kubernetes-validations:
                - message: interval must be a valid positive duration
                  rule: duration(self) > duration('0s')
              name:
                description: Name is the name of the rule (deprecated and not used
                  - use `metadata.name` instead)
                type: string
              table:
                description: Table is rule output destination
                type: string
            required:
            - body
            - database
            - interval
            - table
            type: object
          status:
            description: SummaryRuleStatus defines the observed state of Function
            properties:
              conditions:
                description: |-
                  Conditions is an array of current observed SummaryRule conditions.
                  SummaryRule controllers set at minimum the owner condition (SummaryRuleOwner) and may also
                  use shared conditions defined in conditions.go: ConditionCriteria, ConditionCompleted, ConditionFailed.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
