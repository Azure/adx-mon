---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.19.0
  name: alertrules.adx-mon.azure.com
spec:
  group: adx-mon.azure.com
  names:
    kind: AlertRule
    listKind: AlertRuleList
    plural: alertrules
    singular: alertrule
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: AlertRule is the Schema for the alertrules API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AlertRuleSpec defines the desired state of AlertRule
            properties:
              autoMitigateAfter:
                type: string
                x-kubernetes-validations:
                - message: autoMitigateAfter must be a valid duration
                  rule: self == '' || duration(self) >= duration('0s')
              criteria:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: |-
                  Key/Value pairs used to determine when an alert can execute.  If empty, always execute.  Keys and values
                  are deployment specific and configured on alerter instances.  For example, an alerter instance may be
                  started with `--tag cloud=public`. If an AlertRule has `criteria: {cloud: public}`, then the rule will only
                  execute on that alerter. Any key/values pairs must match (case-insensitive) for the rule to execute.
                type: object
              criteriaExpression:
                description: |-
                  CriteriaExpression is an optional CEL (Common Expression Language) expression that provides a richer way
                  to determine if the alert should execute. The CEL environment is dynamically constructed from the alerter's
                  execution context (cloud, region, and any --tag key/value pairs). All variables are exposed as strings and
                  can be referenced directly by their tag name. For example:

                    criteriaExpression: "cloud == 'public' && region in ['eastus','westus'] && env == 'prod'"

                  Execution semantics:
                    * If neither criteria nor criteriaExpression are specified, the rule always executes.
                    * If only criteriaExpression is specified, it must evaluate to true for the rule to execute.
                    * If only criteria (map) is specified, existing matching behavior (any key/value match) applies.
                    * If both are specified, the rule executes when BOTH the criteria map matches AND the expression evaluates to true.

                  An invalid expression (parse or type check error) will treated as an error and prevent the rule from executing.
                type: string
              database:
                type: string
              destination:
                type: string
              interval:
                type: string
                x-kubernetes-validations:
                - message: interval must be a valid positive duration
                  rule: self == '' || duration(self) > duration('0s')
              query:
                type: string
            type: object
          status:
            description: AlertRuleStatus defines the observed state of AlertRule
            properties:
              conditions:
                description: |-
                  Conditions provide standardized status signaling. Controllers may
                  set shared conditions defined in conditions.go such as ConditionCriteria
                  to reflect evaluation of Spec.Criteria / Spec.CriteriaExpression.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastAlertTime:
                format: date-time
                type: string
              lastQueryTime:
                format: date-time
                type: string
              message:
                type: string
              status:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
