// Code generated by 'yaegi extract github.com/Azure/adx-mon/collector/logs/types'. DO NOT EDIT.

package plugin

import (
	"context"
	"github.com/Azure/adx-mon/collector/logs/types"
	"reflect"
)

func init() {
	Symbols["github.com/Azure/adx-mon/collector/logs/types/types"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"LogBatchPool": reflect.ValueOf(&types.LogBatchPool).Elem(),
		"LogPool":      reflect.ValueOf(&types.LogPool).Elem(),
		"NewLog":       reflect.ValueOf(types.NewLog),

		// type definitions
		"Log":         reflect.ValueOf((*types.Log)(nil)),
		"LogBatch":    reflect.ValueOf((*types.LogBatch)(nil)),
		"Sink":        reflect.ValueOf((*types.Sink)(nil)),
		"Source":      reflect.ValueOf((*types.Source)(nil)),
		"Transformer": reflect.ValueOf((*types.Transformer)(nil)),

		// interface wrapper definitions
		"_Sink":        reflect.ValueOf((*_github_com_Azure_adx_mon_collector_logs_types_Sink)(nil)),
		"_Source":      reflect.ValueOf((*_github_com_Azure_adx_mon_collector_logs_types_Source)(nil)),
		"_Transformer": reflect.ValueOf((*_github_com_Azure_adx_mon_collector_logs_types_Transformer)(nil)),
	}
}

// _github_com_Azure_adx_mon_collector_logs_types_Sink is an interface wrapper for Sink type
type _github_com_Azure_adx_mon_collector_logs_types_Sink struct {
	IValue interface{}
	WClose func() error
	WName  func() string
	WOpen  func(a0 context.Context) error
	WSend  func(a0 context.Context, a1 *types.LogBatch) error
}

func (W _github_com_Azure_adx_mon_collector_logs_types_Sink) Close() error {
	return W.WClose()
}
func (W _github_com_Azure_adx_mon_collector_logs_types_Sink) Name() string {
	return W.WName()
}
func (W _github_com_Azure_adx_mon_collector_logs_types_Sink) Open(a0 context.Context) error {
	return W.WOpen(a0)
}
func (W _github_com_Azure_adx_mon_collector_logs_types_Sink) Send(a0 context.Context, a1 *types.LogBatch) error {
	return W.WSend(a0, a1)
}

// _github_com_Azure_adx_mon_collector_logs_types_Source is an interface wrapper for Source type
type _github_com_Azure_adx_mon_collector_logs_types_Source struct {
	IValue interface{}
	WClose func() error
	WName  func() string
	WOpen  func(a0 context.Context) error
}

func (W _github_com_Azure_adx_mon_collector_logs_types_Source) Close() error {
	return W.WClose()
}
func (W _github_com_Azure_adx_mon_collector_logs_types_Source) Name() string {
	return W.WName()
}
func (W _github_com_Azure_adx_mon_collector_logs_types_Source) Open(a0 context.Context) error {
	return W.WOpen(a0)
}

// _github_com_Azure_adx_mon_collector_logs_types_Transformer is an interface wrapper for Transformer type
type _github_com_Azure_adx_mon_collector_logs_types_Transformer struct {
	IValue     interface{}
	WClose     func() error
	WName      func() string
	WOpen      func(a0 context.Context) error
	WTransform func(a0 context.Context, a1 *types.LogBatch) (*types.LogBatch, error)
}

func (W _github_com_Azure_adx_mon_collector_logs_types_Transformer) Close() error {
	return W.WClose()
}
func (W _github_com_Azure_adx_mon_collector_logs_types_Transformer) Name() string {
	return W.WName()
}
func (W _github_com_Azure_adx_mon_collector_logs_types_Transformer) Open(a0 context.Context) error {
	return W.WOpen(a0)
}
func (W _github_com_Azure_adx_mon_collector_logs_types_Transformer) Transform(a0 context.Context, a1 *types.LogBatch) (*types.LogBatch, error) {
	return W.WTransform(a0, a1)
}
